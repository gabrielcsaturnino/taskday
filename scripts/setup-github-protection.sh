#!/bin/bash

# TaskDay - Script para configurar prote√ß√£o de branches no GitHub
# Este script cria as regras de prote√ß√£o necess√°rias

echo "üîí TaskDay - Configura√ß√£o de Prote√ß√£o de Branches"
echo "================================================="

# Cores
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

echo -e "${BLUE}üìã Este script ir√° configurar as regras de prote√ß√£o para:${NC}"
echo "   üîí main (Produ√ß√£o) - Prote√ß√£o m√°xima"
echo "   üîí develop (Desenvolvimento) - Prote√ß√£o alta"
echo "   üîí staging (Teste) - Prote√ß√£o m√©dia"
echo ""

echo -e "${YELLOW}‚ö†Ô∏è  IMPORTANTE: Execute este script ap√≥s criar as branches!${NC}"
echo ""

# Verificar se estamos no diret√≥rio correto
if [ ! -f "pom.xml" ]; then
    echo -e "${RED}‚ùå Erro: Execute este script no diret√≥rio raiz do projeto TaskDay${NC}"
    exit 1
fi

# Verificar se o GitHub CLI est√° instalado
if ! command -v gh &> /dev/null; then
    echo -e "${RED}‚ùå Erro: GitHub CLI (gh) n√£o est√° instalado!${NC}"
    echo "Instale com: https://cli.github.com/"
    exit 1
fi

# Verificar se est√° logado no GitHub
if ! gh auth status &> /dev/null; then
    echo -e "${RED}‚ùå Erro: N√£o est√° logado no GitHub CLI!${NC}"
    echo "Execute: gh auth login"
    exit 1
fi

echo -e "${BLUE}üöÄ Configurando prote√ß√£o de branches...${NC}"
echo ""

# 1. Proteger branch MAIN (Produ√ß√£o)
echo -e "${BLUE}üîí Configurando prote√ß√£o para branch MAIN...${NC}"
gh api repos/:owner/:repo/branches/main/protection \
  --method PUT \
  --field required_status_checks='{"strict":true,"contexts":["code-quality","test","security"]}' \
  --field enforce_admins=true \
  --field required_pull_request_reviews='{"required_approving_review_count":2,"dismiss_stale_reviews":true,"require_code_owner_reviews":true}' \
  --field restrictions='{"users":[],"teams":[]}' \
  --field allow_force_pushes=false \
  --field allow_deletions=false

if [ $? -eq 0 ]; then
    echo -e "${GREEN}‚úÖ Prote√ß√£o da branch MAIN configurada!${NC}"
else
    echo -e "${RED}‚ùå Erro ao configurar prote√ß√£o da branch MAIN${NC}"
fi

# 2. Proteger branch DEVELOP
echo -e "${BLUE}üîí Configurando prote√ß√£o para branch DEVELOP...${NC}"
gh api repos/:owner/:repo/branches/develop/protection \
  --method PUT \
  --field required_status_checks='{"strict":true,"contexts":["code-quality","test"]}' \
  --field enforce_admins=false \
  --field required_pull_request_reviews='{"required_approving_review_count":1,"dismiss_stale_reviews":true}' \
  --field restrictions='{"users":[],"teams":[]}' \
  --field allow_force_pushes=false \
  --field allow_deletions=false

if [ $? -eq 0 ]; then
    echo -e "${GREEN}‚úÖ Prote√ß√£o da branch DEVELOP configurada!${NC}"
else
    echo -e "${RED}‚ùå Erro ao configurar prote√ß√£o da branch DEVELOP${NC}"
fi

# 3. Proteger branch STAGING
echo -e "${BLUE}üîí Configurando prote√ß√£o para branch STAGING...${NC}"
gh api repos/:owner/:repo/branches/staging/protection \
  --method PUT \
  --field required_status_checks='{"strict":false,"contexts":["code-quality"]}' \
  --field enforce_admins=false \
  --field required_pull_request_reviews='{"required_approving_review_count":1}' \
  --field restrictions='{"users":[],"teams":[]}' \
  --field allow_force_pushes=false \
  --field allow_deletions=false

if [ $? -eq 0 ]; then
    echo -e "${GREEN}‚úÖ Prote√ß√£o da branch STAGING configurada!${NC}"
else
    echo -e "${RED}‚ùå Erro ao configurar prote√ß√£o da branch STAGING${NC}"
fi

echo ""
echo -e "${GREEN}üéâ Configura√ß√£o de prote√ß√£o conclu√≠da!${NC}"
echo ""
echo -e "${YELLOW}üìã Resumo das prote√ß√µes:${NC}"
echo "   üîí main: 2 revisores, CI obrigat√≥rio, admins protegidos"
echo "   üîí develop: 1 revisor, CI obrigat√≥rio"
echo "   üîí staging: 1 revisor, CI b√°sico"
echo ""
echo -e "${BLUE}üìö Pr√≥ximos passos:${NC}"
echo "1. Teste criando uma feature branch"
echo "2. Tente fazer push direto para main (deve falhar)"
echo "3. Crie um Pull Request para testar"
echo "4. Verifique se as regras est√£o funcionando"
echo ""
echo -e "${GREEN}‚úÖ Branches protegidas com sucesso!${NC}"
