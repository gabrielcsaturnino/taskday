#!/bin/bash

# TaskDay - Script para criar hotfix urgente
# Uso: ./scripts/create-hotfix.sh descricao-do-hotfix

# Cores
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

# Verificar par√¢metros
if [ $# -eq 0 ]; then
    echo -e "${RED}‚ùå Erro: Forne√ßa a descri√ß√£o do hotfix${NC}"
    echo "Uso: ./scripts/create-hotfix.sh descricao-do-hotfix"
    echo "Exemplo: ./scripts/create-hotfix.sh critical-security-fix"
    exit 1
fi

HOTFIX_DESCRIPTION=$1
BRANCH_NAME="hotfix/$HOTFIX_DESCRIPTION"

echo -e "${RED}üö® Criando HOTFIX urgente: ${HOTFIX_DESCRIPTION}${NC}"
echo "========================================"
echo -e "${YELLOW}‚ö†Ô∏è  ATEN√á√ÉO: Hotfix √© para corre√ß√µes URGENTES em produ√ß√£o!${NC}"
echo ""

# Verificar se j√° existe
if git show-ref --verify --quiet refs/heads/$BRANCH_NAME; then
    echo -e "${RED}‚ùå Erro: Branch ${BRANCH_NAME} j√° existe!${NC}"
    exit 1
fi

# Verificar se estamos na main
current_branch=$(git branch --show-current)
if [ "$current_branch" != "main" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  Mudando para branch main...${NC}"
    git checkout main
    git pull origin main
fi

# Criar branch
echo -e "${BLUE}üìù Criando branch: ${BRANCH_NAME}${NC}"
git checkout -b "$BRANCH_NAME"

# Push para origin
git push -u origin "$BRANCH_NAME"

echo -e "${GREEN}‚úÖ Hotfix branch criada com sucesso!${NC}"
echo ""
echo -e "${YELLOW}üìã Pr√≥ximos passos URGENTES:${NC}"
echo "1. Corrija o problema CR√çTICO"
echo "2. Teste extensivamente"
echo "3. Fa√ßa commit e push"
echo "4. Merge IMEDIATO para main"
echo "5. Deploy IMEDIATO para produ√ß√£o"
echo ""
echo -e "${BLUE}üöÄ Comandos √∫teis:${NC}"
echo "   git add ."
echo "   git commit -m 'hotfix: descri√ß√£o da corre√ß√£o urgente'"
echo "   git push origin $BRANCH_NAME"
echo ""
echo -e "${RED}üö® LEMBRE-SE: Hotfix deve ser mergeado para main IMEDIATAMENTE!${NC}"
echo -e "${GREEN}‚úÖ Pronto para corre√ß√£o urgente!${NC}"
