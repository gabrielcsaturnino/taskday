# TaskDay - Docker Compose para Desenvolvimento Mobile
# Integração completa: Backend + Frontend Mobile + Banco de Dados

version: '3.8'

services:
  # Banco de Dados PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: taskday-postgres
    environment:
      POSTGRES_DB: taskdaydb
      POSTGRES_USER: gabriel
      POSTGRES_PASSWORD: 123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gabriel -d taskdaydb"]
      interval: 30s
      timeout: 10s
      retries: 3

  # pgAdmin para administração do banco
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: taskday-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@taskday.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "8081:80"
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  # Backend Spring Boot
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: taskday-backend
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/taskdaydb
      SPRING_DATASOURCE_USERNAME: gabriel
      SPRING_DATASOURCE_PASSWORD: 123
      SERVER_PORT: 8080
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./uploads:/app/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis para cache (opcional)
  redis:
    image: redis:7-alpine
    container_name: taskday-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # Nginx para proxy reverso
  nginx:
    image: nginx:alpine
    container_name: taskday-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  pgadmin_data:
  redis_data:

networks:
  default:
    name: taskday-network
